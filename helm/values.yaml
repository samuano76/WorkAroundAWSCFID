statsUsername: stats
statsPassword: statsPwd
tlsCert: "tls.crt"
tlsKey: "tls.key"
#ingressFQDN: "secured-apps.cluster-pzhsw.gcp.redhatworkshops.io"
ingressFQDN: "shard.apps.ocp1poste.lab.psi.pnq2.redhat.com"
image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:7bc1c378acc4c3c7b6e12b98cbe1f069d88b3b3eb9780acbf938003f289ab055
nodeSelector:
  node-role.kubernetes.io/worker: ""
#  router-sharded: "yes"
routeLabels: type=sharded
service:
#  useInternalLB: gcp
  annotations:
    app: router
# with service.type = NodePort, allocateLoadBalancerNodePorts should be set to false
# httpNodePort  and httpsNodePort are optional to set the node port to be allocated
  type: NodePort
# allocateLoadBalancerNodePorts should be set only with service.type = LoadBalancer
  allocateLoadBalancerNodePorts: false
  httpNodePort: 30003
  httpsNodePort: 30004
replicas: 3
# If you  want to expose the router with host Networking set  useHostNetwork: to true
useHostNetwork: false
# You can then set the ports to be used with httpRouterPort, httpsRouterPort and  metricsRouterPort
httpRouterPort: 80
httpsRouterPort: 443
metricsRouterPort: 1936
customHAProxyTemplate:
  useCustomTemplate: true
  file: haproxy-config.template